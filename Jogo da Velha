/*
V0.1
Melhorado o sistema de verificação de termino de jogo.
De 90 Linhas para 19
V0.2
Otimização no codigo do loop e do jogo, menos funções sendo chamadas pelo main.
*/

#include <iostream>
#include <new>
#include <cstdlib>
#include <time.h>
using namespace std;

class jogo
{
	public:
	
		int vezesJogadas;
		int *pPosicoesJogaveis;
		int jogador, CPU;
		int ganhador;

		void atualizarVezesJogadas(void) { vezesJogadas++; }
		
		int verificarJogadaPermitida(int jogada);
		int jogar(int jogador, int jogada);
		int verificarGanhador(void);
		void print(void);
		
		jogo(void);
		~jogo(void) { }
		
};


	jogo::jogo(void){
	
		vezesJogadas = 0;
		jogador = 0, CPU = 0;
		ganhador = 0;
		pPosicoesJogaveis = new int [ 9 ];
		
		for(int i = 0; i < 9; i++){
			pPosicoesJogaveis[ i ] = 0;
		}
		
	}
	
	int jogo::verificarJogadaPermitida(int jogada){
	
		if(pPosicoesJogaveis[jogada] != 0){
			return 1;
		}
		else return 0;
	}
	
	int jogo::jogar(int jogador, int jogada){
		
		if(verificarJogadaPermitida(jogada) == 0){
			
			pPosicoesJogaveis[jogada] = jogador;
			atualizarVezesJogadas();
			print();
			if(vezesJogadas >= 3) ganhador = verificarGanhador();
			return 0;
		
		}else return 1;
		
	}
	
	void jogo::print(void){
		
		cout << " \n        Jogo da Velha: \n ********* LUST 3:) *********" << endl;
		cout << " \nInstruções: \nSelecionar os quadros de 1 a 9 \nSelecionar 1 para X ou 2 para O \n\n" << endl;
		cout << "Jogador: " << jogador << "   CPU: " << CPU  << "\n\n" << endl;
		
		for(int i = 0; i < 9; i++){
		
			if(i%3==0) cout << "\t   ";
			
			if(pPosicoesJogaveis[i] == 0){
			 if(i<6)  cout << "_";
			 else cout << " ";
			}
			else if(pPosicoesJogaveis[i] == 1) cout << "X";
			else if(pPosicoesJogaveis[i] == 2) cout << "O";
			
			if(i==2 || i==5 || i==8) cout << "\n";
				else cout << "|";
		}
		
		
	}	

	int jogo::verificarGanhador(void){
		
		for(int l = 0, c = 0; l < 9; l = l + 3, c++){
			
			if(pPosicoesJogaveis[l] == jogador && pPosicoesJogaveis[l + 1] == jogador && pPosicoesJogaveis[l + 2] == jogador) return jogador;
			else if(pPosicoesJogaveis[l] == CPU && pPosicoesJogaveis[l + 1] == CPU && pPosicoesJogaveis[l + 2] == CPU) return CPU;
			
			if(pPosicoesJogaveis[c] == jogador && pPosicoesJogaveis[c + 3] == jogador && pPosicoesJogaveis[c + 6] == jogador) return jogador;
			else if(pPosicoesJogaveis[c] == CPU && pPosicoesJogaveis[c + 3] == CPU && pPosicoesJogaveis[c + 6] == CPU) return CPU;
			
		}
		
		if(pPosicoesJogaveis[0] == jogador && pPosicoesJogaveis[4] == jogador && pPosicoesJogaveis[8] == jogador) return jogador;
		else if(pPosicoesJogaveis[0] == CPU && pPosicoesJogaveis[4] == CPU && pPosicoesJogaveis[8] == CPU) return CPU;
		else if(pPosicoesJogaveis[2] == jogador && pPosicoesJogaveis[4] == jogador && pPosicoesJogaveis[6] == jogador) return jogador;
		else if(pPosicoesJogaveis[2] == CPU && pPosicoesJogaveis[4] == CPU && pPosicoesJogaveis[6] == CPU) return CPU;
		else return 0;
		
	}

	
	
int main(void){
	
	jogo jogo1;
	
	int jogadaAtual = 0, sucesso = 1;
	
	jogo1.print();
	//cin >> jogador >> endl; //Aqui vai a escolha do jogador.
	
	jogo1.jogador = 2;
	jogo1.CPU = 1;
	srand(time(NULL));
	
	while(jogo1.vezesJogadas < 9){
		
		//Jogador
		do{
			//cin >> jogadaAtual >> endl; //Aqui vai a escolha do jogador.
			jogadaAtual = rand() % 9;
			sucesso = jogo1.jogar(jogo1.jogador, jogadaAtual);
		}while(sucesso!=0);
		
		sucesso = 1;
		
		cout << " \nvezesJogadas: " << jogo1.vezesJogadas << " \nGanhador: " << jogo1.ganhador;
		
		if(jogo1.ganhador != 0) break;
		
		//CPU
		do{
			jogadaAtual = rand() % 9;
			sucesso = jogo1.jogar(jogo1.CPU, jogadaAtual);
		}while(sucesso!=0);
		
		sucesso = 1;

		cout << " \nvezesJogadas: " << jogo1.vezesJogadas << " \nGanhador: " << jogo1.ganhador;
		
		if(jogo1.ganhador != 0) break;
		
	};

	if(jogo1.ganhador == 0) cout << "\n VELHAAAA " << endl;
	else if(jogo1.ganhador == jogo1.jogador) cout << "\n Jogador Ganhou!!! " << endl;
	else if(jogo1.ganhador == jogo1.CPU) cout << "\n CPU Ganhou!!! " << endl;
	
	return 0;
}
