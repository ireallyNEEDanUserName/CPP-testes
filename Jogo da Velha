#include <iostream>
#include <new>
#include <cstdlib>
#include <time.h>
using namespace std;

class jogo
{
	public:
	
		int vezesJogadas;
		int *pPosicoesJogaveis;

		int verificarJogadaPermitida(int jogada);
		void atualizarVezesJogadas(void) { vezesJogadas++; }
		int atualizarpPosicoesJogaveis(int jogador, int jogada);
		int verificarGanhadorC(void);
		int verificarGanhadorJ(void);
		void print(void);
		
		jogo(void);

		~jogo(void) { }
		

};


	jogo::jogo(void){
	
		vezesJogadas = 0;
		pPosicoesJogaveis = new int [ 9 ];
		
		for(int i = 0; i < 9; i++){
			pPosicoesJogaveis[ i ] = 0;
		}
		
	}
	
	int jogo::verificarJogadaPermitida(int jogada){
	
		if(pPosicoesJogaveis[jogada] != 0){
			return 1;
		}
		else return 0;
	}
	
	int jogo::atualizarpPosicoesJogaveis(int jogador, int jogada){
		
		if(verificarJogadaPermitida(jogada) == 0){
			
			pPosicoesJogaveis[jogada] = jogador;
			return 0;
		
		}else return 1;
		
	}
	
	void jogo::print(void){
		
		cout << " \n        Jogo da Velha: \n ********* LUST 3:) *********" << endl;
		cout << " \nInstruções: \nSelecionar os quadros de 1 a 9 \nSelecionar 1 para X ou 2 para O \n\n" << endl;
		
		for(int i = 0; i < 9; i++){
		
			if(i%3==0) cout << "\t   ";
			
			if(pPosicoesJogaveis[i] == 0){
			 if(i<6)  cout << "_";
			 else cout << " ";
			}
			else if(pPosicoesJogaveis[i] == 1) cout << "X";
			else if(pPosicoesJogaveis[i] == 2) cout << "O";
			
			if(i==2 || i==5 || i==8) cout << "\n";
				else cout << "|";
		}
		
		
	}	

	int jogo::verificarGanhadorC(void){
		
		int *xCl = new int [ 3 ], *xCc = new int [ 3 ], *xCd = new int [ 2 ];
		
		for(int in = 0; in < 3; in++){
			xCl[in] = 0;
			xCc[in] = 0;
		}
		for(int inD = 0; inD < 2; inD++){
			xCd[inD] = 0;
		}
		
		for(int i = 0; i < 9; i++){
			
			if(pPosicoesJogaveis[i] == 2){
				if(i == 0 || i == 1 || i == 2) xCl[0]++;
				else if(i == 3 || i == 4 || i == 5) xCl[1]++;
				else if(i == 6 || i == 7 || i == 8) xCl[2]++;
				
				if(i == 0 || i == 3 || i == 6) xCc[0]++;
				else if(i == 1 || i == 4 || i == 7) xCc[1]++;
				else if(i == 2 || i == 5 || i == 8) xCc[2]++;
				
				if(i == 0 || i == 4 || i == 8) xCd[0]++;
				if(i == 2 || i == 4 || i == 6) xCd[1]++;
			}
			

			else if(xCl[0]== 3) return 2;
			else if(xCl[1]== 3) return 2;
			else if(xCl[2]== 3) return 2;
			else if(xCc[0]== 3) return 2;
			else if(xCc[1]== 3) return 2;
			else if(xCc[2]== 3) return 2;
			else if(xCd[0]== 3) return 2;
			else if(xCd[1]== 3) return 2;
			
		}
		
		delete xCl;
		delete xCc;
		delete xCd;
		return 0;
		
	}
	
	int jogo::verificarGanhadorJ(void){
		
		int *xJl = new int [ 3 ], *xJc = new int [ 3 ], *xJd = new int [ 2 ];
		
		for(int in = 0; in < 3; in++){
			xJl[in] = 0;
			xJc[in] = 0;
		}
		for(int inD = 0; inD < 2; inD++){
			xJd[inD] = 0;
		}
		
		for(int i = 0; i < 9; i++){
			
			if(pPosicoesJogaveis[i] == 1){
				if(i == 0 || i == 1 || i == 2) xJl[0]++;
				else if(i == 3 || i == 4 || i == 5) xJl[1]++;
				else if(i == 6 || i == 7 || i == 8) xJl[2]++;
				
				if(i == 0 || i == 3 || i == 6) xJc[0]++;
				else if(i == 1 || i == 4 || i == 7) xJc[1]++;
				else if(i == 2 || i == 5 || i == 8) xJc[2]++;
				
				if(i == 0 || i == 4 || i == 8) xJd[0]++;
				if(i == 2 || i == 4 || i == 6) xJd[1]++;
			}
		
			if(xJl[0]== 3) return 1;
			else if(xJl[1]== 3) return 1;
			else if(xJl[2]== 3) return 1;
			else if(xJc[0]== 3) return 1;
			else if(xJc[1]== 3) return 1;
			else if(xJc[2]== 3) return 1;
			else if(xJd[0]== 3) return 1;
			else if(xJd[1]== 3) return 1;
		}
		
		delete xJl;
		delete xJc;
		delete xJd;
		
		return 0;
		
		
	}

	
	
int main(void){
	
	jogo jogo1;
	
	
	int jogador = 0, CPU = 0;
	int jogadaAtual = 0, sucesso = 1;
	int ganhador = 0;

	jogo1.print();
	
	//cin >> jogador >> endl; //Aqui vai a escolha do jogador.
	jogador = 1;
	CPU = 2;
	srand(time(NULL));
	
	while(jogo1.vezesJogadas < 9){
		
		//Jogador
		do{
			jogadaAtual = rand() % 9;
			sucesso = jogo1.atualizarpPosicoesJogaveis(jogador, jogadaAtual);
		}while(sucesso!=0);
		
		if(jogo1.vezesJogadas >= 2) ganhador = jogo1.verificarGanhadorJ();
		//cout << "\nPosicao: " << endl;
		sucesso = 1;
		jogo1.atualizarVezesJogadas();
		jogo1.print();
		
		cout << " \nvezesJogadas: " << jogo1.vezesJogadas << " \nGanhador: " << ganhador;
		
		//CPU
		do{
			jogadaAtual = rand() % 9;
			sucesso = jogo1.atualizarpPosicoesJogaveis(CPU, jogadaAtual);
		}while(sucesso!=0);
		
		jogo1.atualizarVezesJogadas();
		jogo1.print();
		
		if(jogo1.vezesJogadas >= 2) ganhador = jogo1.verificarGanhadorC();
		
		cout << " \nvezesJogadas: " << jogo1.vezesJogadas << " \nGanhador: " << ganhador;
		if(ganhador != 0) break;
	};

	if(ganhador == 0) cout << "\n VELHAAAA " << endl;
	else if(ganhador == 1) cout << "\n Jogador Ganhou!!! " << endl;
	else if(ganhador == 2) cout << "\n CPU Ganhou!!! " << endl;
	
	
	
	return 0;
}
